function s(e){return{value:e,children:[]}}function a(e,{value:n,children:t}){return{value:e(n),children:t}}function O(e){return{node:e,path:[]}}function N(e,{node:n,path:t}){return{node:a(e,n),path:t}}function P(e,n){return N(()=>e,n)}function V({node:e}){return e}function y({node:e}){return e.value}function f({node:e,path:n}){let[t,...r]=n;if(t){let{focus:i,left:o,right:u}=t;return{node:{value:i,children:[...o,e,...u]},path:r}}else return}function v({node:e,path:n}){let[t,...r]=n;if(t){let{focus:i,left:o,right:u}=t,[p,...T]=[...o].reverse();if(p){let d={focus:i,left:[...T].reverse(),right:[e,...u]};return{node:p,path:[d,...r]}}else return}else return}function x({node:e,path:n}){let[t,...r]=n;if(t){let{focus:i,left:o,right:u}=t,[p,...T]=u;if(p){let d={focus:i,left:[...o,e],right:T};return{node:p,path:[d,...r]}}else return}else return}function h(e,{node:n,path:t}){let{focus:r,left:i,right:o}=m(e,n.children);if(r){let u={focus:n.value,left:i,right:o};return{node:r,path:[u,...t]}}else return}function U(e){return h(0,e)}function A({node:e,path:n}){return h(e.children.length-1,{node:e,path:n})}function Z(e){let n=f(e);if(n){let t=x(n);return t||Z(n)}else return}function g(e){let n=A(e);return n?g(n):e}function C(e){return l([U,x,Z],e)}function b(e){let n=v(e);if(n)return g(n)}function w(e){return l([b,f],e)}function l(e,n){let[t,...r]=e;if(t){let i=t(n);return i||l(r,n)}else return}function m(e,n){let t=n.slice(0,e),r=n[e],i=n.slice(e+1);return{focus:r,left:t,right:i}}function L(e){if(e.path.length>0){let n=f(e);return n?L(n):void 0}else return e}function c(e,n,t){let r=n(t);if(r)return e(y(r))?r:c(e,n,r)}function D(e,n){return c(e,C,n)}function R(e,n){return c(e,w,n)}function _(e,{node:n,path:t}){let[r,...i]=t,o;if(r){let{focus:u,left:p,right:T}=r;o={focus:u,left:[...p,e],right:T}}else o={focus:n.value,left:[e],right:[]};return{node:n,path:[o,...i]}}function j(e,{node:n,path:t}){let[r,...i]=t,o;if(r){let{focus:u,left:p,right:T}=r;o={focus:u,left:p,right:[e,...T]}}else o={focus:n.value,left:[],right:[e]};return{node:n,path:[o,...i]}}function k({path:e}){let[n,...t]=e;if(n){let{left:r,right:i}=n;if(i.length){let[o,...u]=i,p={focus:o.value,left:r,right:u};return{node:o,path:[p,...t]}}else if(r.length){let o=r[r.length-1],u=r.slice(0,-1),p={focus:o.value,left:u,right:i};return{node:o,path:[p,...t]}}else return{node:s(t[0].focus),path:t}}}export{j as append,c as find,D as findNext,R as findPrevious,v as goLeft,C as goNext,w as goPrevious,x as goRight,h as goToChild,U as goToFirstChild,A as goToLastChild,g as goToLastDecendant,f as goUp,_ as prepend,k as remove,P as replace,L as root,V as tree,N as update,y as value,O as zipper};
